@model HomeworkHelp.Models.Homework
@{
    var selectList = new SelectList(
        new List<SelectListItem>
        {
    new SelectListItem {Text = "Very Low", Value = "1"},
    new SelectListItem {Text = "Low", Value = "2"},
    new SelectListItem {Text = "Medium", Value = "3"},
    new SelectListItem {Text = "High", Value = "4"},
    new SelectListItem {Text = "Urgent", Value = "5"},
                }, "Value", "Text");
}
<link rel="stylesheet" href="~/Content/bootstrap.css" />
@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
<div class="row">



    <h4>Homework</h4>

    <div class="row">
        <div class="col-md-3"></div>
        <div class="col-md-5">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.Priority, htmlAttributes: new { @class = "control-label col-sm-2" })

                @Html.DropDownListFor(model => model.Priority, selectList, "Select One", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Priority, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="col-md-3"></div>
    </div>


    <div class="row">
        <div class="col-md-5">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="form-group">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })

            </div>





            @Html.LabelFor(model => model.Time, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="form-group">
                @Html.EditorFor(model => model.Time, new { size = 200, htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Time, "", new { @class = "text-danger" })
            </div>

        </div>
        <div class="col-md-3"></div>
        <div class="col-md-7">
            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-sm-2" })
            <div class="form-group">
                @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.CourseID, htmlAttributes: new { @class = "control-label col-sm-2" })

                @Html.EditorFor(model => model.CourseID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CourseID, "", new { @class = "text-danger" })

            </div>
        </div>
    </div>




    <div class="row">
        <div class="col-md-5">
            <div class="form-group">

                @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-sm-2" })

                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })

            </div>
        </div>
    </div>




    <div class="form-group">
        @Html.LabelFor(model => model.Notes, htmlAttributes: new { @class = "control-label col-sm-2 " })

        @Html.TextAreaFor(model => model.Notes, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Notes, "", new { @class = "text-danger" })

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>



</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
